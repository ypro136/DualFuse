diff -u -r -N gcc-13.2.0/config.sub gcc_src/config.sub
--- gcc-13.2.0/config.sub	2023-07-27 11:13:03.000000000 +0300
+++ gcc_src/config.sub	2024-11-30 11:35:41.237771883 +0200
@@ -1723,7 +1723,7 @@
 	     | hpux* | unos* | osf* | luna* | dgux* | auroraux* | solaris* \
 	     | sym* |  plan9* | psp* | sim* | xray* | os68k* | v88r* \
 	     | hiux* | abug | nacl* | netware* | windows* \
-	     | os9* | macos* | osx* | ios* \
+	     | os9* | macos* | osx* | ios* | dualfuse* \
 	     | mpw* | magic* | mmixware* | mon960* | lnews* \
 	     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \
 	     | aos* | aros* | cloudabi* | sortix* | twizzler* \
diff -u -r -N gcc-13.2.0/fixincludes/mkfixinc.sh gcc_src/fixincludes/mkfixinc.sh
--- gcc-13.2.0/fixincludes/mkfixinc.sh	2023-07-27 11:13:03.000000000 +0300
+++ gcc_src/fixincludes/mkfixinc.sh	2024-11-30 11:35:41.237771883 +0200
@@ -11,6 +11,8 @@
 
 # Check for special fix rules for particular targets
 case $machine in
+    *-dualfuse* | \
+    *-*-dualfuse* | \
     i?86-*-cygwin* | \
     i?86-*-mingw32* | \
     x86_64-*-mingw32* | \
diff -u -r -N gcc-13.2.0/gcc/config/dualfuse.h gcc_src/gcc/config/dualfuse.h
--- gcc-13.2.0/gcc/config/dualfuse.h	1970-01-01 02:00:00.000000000 +0200
+++ gcc_src/gcc/config/dualfuse.h	2024-11-30 11:35:41.237771883 +0200
@@ -0,0 +1,42 @@
+/* Useful if you wish to make target-specific GCC changes. */
+#undef TARGET_DUALFUSE
+#define TARGET_DUALFUSE 1
+
+/* Default arguments you want when running your
+	 i686-cavos-gcc/x86_64-cavos-gcc toolchain */
+#undef LIB_SPEC
+#define LIB_SPEC "-lc" /* link against C standard library */
+
+/* Tell ld to force 4KB pages*/
+#undef LINK_SPEC
+#define LINK_SPEC "-z max-page-size=4096"
+
+/* Dynamic linking */
+#undef LINK_SPEC
+#define LINK_SPEC "%{shared:-shared} %{static:-static} %{!shared: %{!static: %{rdynamic:-export-dynamic}}}"
+
+/* Files that are linked before user code.
+	 The %s tells GCC to look for these files in the library directory. */
+#undef STARTFILE_SPEC
+#define STARTFILE_SPEC \
+	"%{!shared: %{pg|p:gcrt1.o%s;:crt1.o%s}}\
+   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}"
+
+/* Files that are linked after user code. */
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC \
+	"%{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s"
+
+/* Additional predefined macros. */
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()    \
+	do                                \
+	{                                 \
+		builtin_define("__dualfuse__");    \
+		builtin_define("__unix__");     \
+		builtin_define("__linux__");    \
+		builtin_assert("system=dualfuse"); \
+		builtin_assert("system=unix");  \
+		builtin_assert("system=posix"); \
+		builtin_assert("system=linux"); \
+	} while (0);
\ No newline at end of file
diff -u -r -N gcc-13.2.0/gcc/config/i386/t-x86_64-dualfuse gcc_src/gcc/config/i386/t-x86_64-dualfuse
--- gcc-13.2.0/gcc/config/i386/t-x86_64-dualfuse	1970-01-01 02:00:00.000000000 +0200
+++ gcc_src/gcc/config/i386/t-x86_64-dualfuse	2024-11-30 11:57:04.874211741 +0200
@@ -0,0 +1,4 @@
+# Add libgcc multilib variant without red-zone requirement
+
+MULTILIB_OPTIONS += mno-red-zone
+MULTILIB_DIRNAMES += no-red-zone
\ No newline at end of file
diff -u -r -N gcc-13.2.0/gcc/config/sh/sh.cc gcc_src/gcc/config/sh/sh.cc
--- gcc-13.2.0/gcc/config/sh/sh.cc	2023-07-27 11:13:04.000000000 +0300
+++ gcc_src/gcc/config/sh/sh.cc	2024-11-30 11:35:41.237771883 +0200
@@ -9141,7 +9141,7 @@
 	{
 	  /* Weak functions may be NULL which doesn't work with
 	     GOTOFFFUNCDESC because the runtime offset is not known.  */
-	  if (SYMBOL_REF_WEAK (orig))
+	  if (SYMBOL_REF_WEAK (orig) || (TREE_PUBLIC(SYMBOL_REF_DECL(orig)) && DECL_VISIBILITY (SYMBOL_REF_DECL(orig)) != VISIBILITY_HIDDEN))
 	    emit_insn (gen_symGOTFUNCDESC2reg (reg, orig));
 	  else
 	    emit_insn (gen_symGOTOFFFUNCDESC2reg (reg, orig));
diff -u -r -N gcc-13.2.0/gcc/config.gcc gcc_src/gcc/config.gcc
--- gcc-13.2.0/gcc/config.gcc	2023-07-27 11:13:04.000000000 +0300
+++ gcc_src/gcc/config.gcc	2024-11-30 11:58:23.503863437 +0200
@@ -690,6 +690,13 @@
 
 # Common parts for widely ported systems.
 case ${target} in
+*-*-dualfuse*)
+  extra_options="$extra_options gnu-user.opt"
+  gas=yes
+  gnu_ld=yes
+  default_use_cxa_atexit=yes
+  use_gcc_stdint=provide
+  ;;
 *-*-darwin*)
   tmake_file="t-darwin "
   tm_file="${tm_file} darwin.h"
@@ -1126,6 +1133,13 @@
 esac
 
 case ${target} in
+i[34567]86-*-dualfuse*)
+    tm_file="${tm_file} i386/unix.h i386/att.h elfos.h glibc-stdint.h i386/i386elf.h dualfuse.h"
+    ;;
+x86_64-*-dualfuse*)
+	tmake_file="${tmake_file} i386/t-x86_64-dualfuse"
+    tm_file="${tm_file} i386/unix.h i386/att.h elfos.h glibc-stdint.h i386/i386elf.h i386/x86-64.h dualfuse.h"
+    ;;
 aarch64*-*-elf | aarch64*-*-fuchsia* | aarch64*-*-rtems*)
 	tm_file="${tm_file} elfos.h newlib-stdint.h"
 	tm_file="${tm_file} aarch64/aarch64-elf.h aarch64/aarch64-errata.h aarch64/aarch64-elf-raw.h"
diff -u -r -N gcc-13.2.0/libgcc/config.host gcc_src/libgcc/config.host
--- gcc-13.2.0/libgcc/config.host	2023-07-27 11:13:07.000000000 +0300
+++ gcc_src/libgcc/config.host	2024-11-30 11:35:41.237771883 +0200
@@ -386,6 +386,14 @@
 esac
 
 case ${host} in
+i[34567]86-*-dualfuse*)
+	extra_parts="$extra_parts crti.o crtbegin.o crtbeginS.o crtbeginT.o crtend.o crtendS.o crtn.o gcrt1.o"
+	tmake_file="$tmake_file i386/t-crtstuff t-crtstuff-pic t-libgcc-pic"
+	;;
+x86_64-*-dualfuse*)
+	extra_parts="$extra_parts crti.o crtbegin.o crtbeginS.o crtbeginT.o crtend.o crtendS.o crtn.o gcrt1.o"
+	tmake_file="$tmake_file i386/t-crtstuff t-crtstuff-pic t-libgcc-pic"
+	;;
 aarch64*-*-elf | aarch64*-*-rtems*)
 	extra_parts="$extra_parts crtbegin.o crtend.o crti.o crtn.o"
 	extra_parts="$extra_parts crtfastmath.o"
diff -u -r -N gcc-13.2.0/libgcc/crtstuff.c gcc_src/libgcc/crtstuff.c
--- gcc-13.2.0/libgcc/crtstuff.c	2023-07-27 11:13:07.000000000 +0300
+++ gcc_src/libgcc/crtstuff.c	2024-11-30 11:35:41.241772259 +0200
@@ -442,17 +442,9 @@
 #ifdef FINI_SECTION_ASM_OP
 CRT_CALL_STATIC_FUNCTION (FINI_SECTION_ASM_OP, __do_global_dtors_aux)
 #elif defined (FINI_ARRAY_SECTION_ASM_OP)
-#if defined(__FDPIC__)
-__asm__("\t.equ\t__do_global_dtors_aux_alias, __do_global_dtors_aux\n");
-extern char __do_global_dtors_aux_alias;
-static void *__do_global_dtors_aux_fini_array_entry[]
-__attribute__ ((__used__, section(".fini_array"), aligned(sizeof(void *))))
-     = { &__do_global_dtors_aux_alias };
-#else /* defined(__FDPIC__) */
 static func_ptr __do_global_dtors_aux_fini_array_entry[]
   __attribute__ ((__used__, section(".fini_array"),
 		  aligned(__alignof__(func_ptr)))) = { __do_global_dtors_aux };
-#endif /* defined(__FDPIC__) */
 #else /* !FINI_SECTION_ASM_OP && !FINI_ARRAY_SECTION_ASM_OP */
 static void __attribute__((used))
 __do_global_dtors_aux_1 (void)
@@ -495,17 +487,9 @@
 #ifdef __LIBGCC_INIT_SECTION_ASM_OP__
 CRT_CALL_STATIC_FUNCTION (__LIBGCC_INIT_SECTION_ASM_OP__, frame_dummy)
 #else /* defined(__LIBGCC_INIT_SECTION_ASM_OP__) */
-#if defined(__FDPIC__)
-__asm__("\t.equ\t__frame_dummy_alias, frame_dummy\n");
-extern char __frame_dummy_alias;
-static void *__frame_dummy_init_array_entry[]
-__attribute__ ((__used__, section(".init_array"), aligned(sizeof(void *))))
-     = { &__frame_dummy_alias };
-#else /* defined(__FDPIC__) */
 static func_ptr __frame_dummy_init_array_entry[]
   __attribute__ ((__used__, section(".init_array"),
 		  aligned(__alignof__(func_ptr)))) = { frame_dummy };
-#endif /* defined(__FDPIC__) */
 #endif /* !defined(__LIBGCC_INIT_SECTION_ASM_OP__) */
 #endif /* USE_EH_FRAME_REGISTRY || USE_TM_CLONE_REGISTRY */
 
diff -u -r -N gcc-13.2.0/libiberty/simple-object-mach-o.c gcc_src/libiberty/simple-object-mach-o.c
--- gcc-13.2.0/libiberty/simple-object-mach-o.c	2023-07-27 11:13:08.000000000 +0300
+++ gcc_src/libiberty/simple-object-mach-o.c	2024-11-30 11:35:41.241772259 +0200
@@ -1228,7 +1228,7 @@
       /* Swap the indices, if required.  */
 
       for (i = 0; i < (nsects_in * 4); ++i)
-	set_32 ((unsigned char *) &index[i], index[i]);
+	      set_32 ((unsigned char *) &index[i], index[i]);
 
       sechdr_offset += sechdrsize;
 
diff -u -r -N gcc-13.2.0/libstdc++-v3/crossconfig.m4 gcc_src/libstdc++-v3/crossconfig.m4
--- gcc-13.2.0/libstdc++-v3/crossconfig.m4	2023-07-27 11:13:08.000000000 +0300
+++ gcc_src/libstdc++-v3/crossconfig.m4	2024-11-30 11:35:41.269774891 +0200
@@ -5,6 +5,12 @@
 AC_DEFUN([GLIBCXX_CROSSCONFIG],[
 # Base decisions on target environment.
 case "${host}" in
+*-dualfuse*)
+    GLIBCXX_CHECK_COMPILER_FEATURES
+    GLIBCXX_CHECK_LINKER_FEATURES
+    GLIBCXX_CHECK_MATH_SUPPORT
+    GLIBCXX_CHECK_STDLIB_SUPPORT
+    ;;
   arm*-*-symbianelf*)
     # This is a freestanding configuration; there is nothing to do here.
     ;;
